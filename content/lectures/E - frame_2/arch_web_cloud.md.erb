---
title: Product Architecture -  Web and Cloud
section: lectures
order: 20
---

##### Homework due for today (Nov 12 2013)

1. Study and read up on the [Nest Thremostat](http://nest.com/thermostat/life-with-nest-thermostat/). Look for articles describing the user interface of the device and play with the demos on their site. You will find videos that describe the installation and the use of the NEST. You might also find articles that either complain or compliment the user interface of the NEST. What do you think they have done right, and what have they not done great? <%= deliverable "Write a piazza post giving your assessment of the Nest User Experience. What is good and what might be better in their user experience, and what do you base your opinion on?" %>
1. Meet with your team for 1-2 hours. Do a more detailed and complete iteration of your User Experience flow, including paper prototypes and the UX flow itself. <%= team_deliverable "Document your user experience flow. Make paper prototypes of all the important screens. Prepare to do a usability test with it." %>

##### Discussion
* Final Presentations Day: Dec 12 - 1:30 to 4:00
	* Review rest of the calendar
	* Review <%= link_to_incubator :final_deliverables %>
	* Review topics that were left out due to schedule

##### Architecture's role in this stage

* These form hypotheses like any other solution hypothesis
* For example
	* can it be built? ("the product can be built.")
	* How long will it take? ("the product can be built to release 1 in 3 months")
	* Will it perform? ("the product will be able to support 10,000 users in the first release")
	* Should we use Android or iPhone, etc.  ("it is safe to ignore the iPhone platform")
	* What would it cost to manufacture?  ("The first 100 units can be manufactured for $10 per")
	* ... etc.
* These kinds of hypotheses need to be answered from a technical/technologoical perspective
* How would you test the hypothesis?
	* Check with some experts to corroborate your hypothesis
	* Show them your design concept
	* Build a prototype/experiment/mvp to validate *that assumption* specifically
* For example distinguish between:
	* Customers will require that we support both iPhone and Android
	* Our architecture can work on iPhone and Android
	* Different questions, requiring different experiments to check
* Common Fundamental Architectural and Technology questions
	* Scale: How do we support the required number of users
	* Deployment vehicle: Cloud, Web, Mobile or Device
	* <%= discussion "Did I leave any out?" %>
* What about the 'secret sauce?'
	* Your app may or may not require some
	* You might consider it your competitive advantage and even patent it
	* Most of your work (80% overall) will not be advanced computer science or new invention
	* For a real commercial product, most of the work will be hard engineering

##### Web and Cloud Architecture
* <%= discussion "Is there a difference? What are some of the tradeoffs?" %>
* A lot in common
	* Acessed using HTTP/REST protocols (typically)
	* Acceessed with a web browser or mobile app (typically)
* What does the term "provisioning" mean?
* Overview of deployment
	* Web: means you own, or control, and manage, a complete set of servers for your application
	* Cloud: means you rent nodes in a cloud (e.g. Amazon Web Services)
	* What are web services?
* Big differences
	* "Elasticity"
	* "API control over provisioning"

##### Scaling
* How many (users, sessions, videos, pictures, etc) does the site need to support
* Big challenge: how fast or slow will it grow?
* Architectural techniques apply equally
	* load balancing
	* scaling up vs. scaling out
	* database partitioning and sharding
	* caching
	* Content Data Networks
* A very big topic which we will go into next semester

##### Data Modeling
* Crucial step in design
* SQL vs. NOSQL databases
* Careful analysis of the product requirements

##### Excercise
* We pick one of the products and together develop a data model for it.