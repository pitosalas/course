---
title: Agile Software Development
section: topics
---

##### Agile Software Development

* How software engineering works (in my experience)
	* How a software company is organized
	* What is a software company nowadays anyway?
	* Classic roles and how they apply in a software company
		* Marketing
		* Sales
		* Engineering+Quality Assurance
		* Finance
		* Business Development
* The role of a 'schedule'
	* Why is it important?
	* How is it used?
	* <%= discussion "When things change...." %>
		* How are some of the ways that things can change?
		* What can cause those changes

* Agile
	* Project management/Software engineering
	* Methodology? Many variants.
	* Not a survey; just learning how to use a particular tool
	* Agile => Extreme Programming, Scrum, and many other variants. 
	* Other methodologies: waterfall. "BDUF".

* Scrum
	* Our preferred variant of agile
	* Scrum Principles:
	* Change is expected and embraced
	* Time-boxing: work in fixed units of time (sprints)
	* Describe what is to be built in small bite-size pieces (stories)
	* Small, empowered, cross functional teams (scrum teams)
	* Rapid Iteration with continues customer input (product owner)
	* Don't estimate -- measure

* Concepts from Scrum:
	* Stories
	* Standup meetings
	* Backlog
	* Product Owner
	* Scrum Master
	* Sprints (for us, 1 week sprints)
	* Velocity
	* Pair Programming
	* Continual Integration
	* Test Driven Development
